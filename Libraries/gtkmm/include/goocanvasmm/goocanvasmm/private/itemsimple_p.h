// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _GOOCANVASMM_ITEMSIMPLE_P_H
#define _GOOCANVASMM_ITEMSIMPLE_P_H


#include <glibmm/private/object_p.h>

#include <glibmm/class.h>

namespace Goocanvas
{

class ItemSimple_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef ItemSimple CppObjectType;
  typedef GooCanvasItemSimple BaseObjectType;
  typedef GooCanvasItemSimpleClass BaseClassType;
  typedef Glib::Object_Class CppClassParent;
  typedef GObjectClass BaseClassParent;

  friend class ItemSimple;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();


  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.

  //Callbacks (virtual functions):
  static void simple_create_path_vfunc_callback(GooCanvasItemSimple* self, cairo_t* cr);
  static void simple_update_vfunc_callback(GooCanvasItemSimple* self, cairo_t* cr);
  static void simple_paint_vfunc_callback(GooCanvasItemSimple* self, cairo_t* cr, const GooCanvasBounds* bounds);
  static gboolean simple_is_item_at_vfunc_callback(GooCanvasItemSimple* self, gdouble x, gdouble y, cairo_t* cr, gboolean is_pointer_event);
};


} // namespace Goocanvas


#endif /* _GOOCANVASMM_ITEMSIMPLE_P_H */

